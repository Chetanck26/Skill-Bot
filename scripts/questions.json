{
    "beginner": {
        "q1": {
            "question_text": ["aa", "bbb"],
            "options": [
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 1 },
                { "answer_text": "", "answer": 0 }
            ]
        },
        "q2": {
            "question_text": ["aa", "bbb"],
            "options": [
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 1 },
                { "answer_text": "", "answer": 0 }
            ]

        },
        "q3":{
            "question_text": ["aa", "bbb"],
            "options": [
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 0 },
                { "answer_text": "", "answer": 1 },
                { "answer_text": "", "answer": 0 }
            ]
        }
    },
    "intermediate":{
        "q1": {
            "question_text": ["- What are the key features of Python?"],
            "options": [
                { "answer_text": "A. Interpreted Language", "answer": 0 },
                { "answer_text": "B. Dynamically Typed", "answer": 0 },
                { "answer_text": "C. Object oriented Programming Language", "answer": 0 },
                { "answer_text": "D. All of the above", "answer": 1 }
            ]
        },
        "q2": {
            "question_text": ["- What is the difference between deep and shallow copy?"],
            "options": [
                { "answer_text": "A. Shallow copy is used to copy the reference pointers just like it copies the values.", "answer": 1 },
                { "answer_text": "B. It makes the reference to an object and the new object that is pointed by some other object gets stored.", "answer": 0 },
                { "answer_text": "C. The changes made in the original copy won’t affect any other copy that uses the object.", "answer": 0 },
                { "answer_text": "D. Shallow copy makes execution of the program slower due to making certain copies for each object that is been called.", "answer": 0 }
            ]
        },
        "q3": {
            "question_text": ["- How is Multithreading achieved in Python?"],
            "options": [
                { "answer_text": "A. It has a multi-threading package but if you want to multi-thread to speed your code up, then it’s usually not a good idea to use it.", "answer": 0 },
                { "answer_text": "B. This happens very late ", "answer": 0 },
                { "answer_text": "C. Python has a construct called the Global Independent Lock (GIL). ", "answer": 0 },
                { "answer_text": "D. None of the above", "answer": 0 }
            ]
        },
        "q4": {
            "question_text": ["- How can the ternary operators be used in python?"],
            "options": [
                { "answer_text": "A. This consists of the true or false", "answer": 0 },
                { "answer_text": "B. This consists of the Integers & float", "answer": 0 },
                { "answer_text": "C. The Ternary operator is the operator that is used to show the conditional statements.", "answer": 1 },
                { "answer_text": "D. Ternary operators also known as logical expressions", "answer": 0 }
            ]
        },
        "q5": {
            "question_text": ["- How is memory managed in Python?"],
            "options": [
                { "answer_text": "A. The programmer does has the access to this private heap.", "answer": 0 },
                { "answer_text": "B. Python objects and data structures are not located in a private heap.", "answer": 0 },
                { "answer_text": "C. Python does not have an inbuilt garbage collector,", "answer": 1 },
                { "answer_text": "D. Memory management in python is managed by Python private heap space.", "answer": 0 }
            ]
        },
        "q6": {
            "question_text": ["- Explain Inheritance in Python."],
            "options": [
                { "answer_text": "A. Inheritance allows One class to gain all the members of another class. ", "answer": 1 },
                { "answer_text": "B. Inheritance allows two class to gain all the members(say attributes and methods) of another class. ", "answer": 0 },
                { "answer_text": "C. nheritance allows multiple class to gain all the members(say attributes and methods) of another class. ", "answer": 1 },
                { "answer_text": "D. Inheritance does not provides code reusability, makes it difficult", "answer": 0 }
            ]
        },
        "q7": {
            "question_text": ["- Explain what Flask is and its benefits?"],
            "options": [
                { "answer_text": "In a flask, a session uses a unsigned cookie so the user can look at the session contents and modify", "answer": 0 },
                { "answer_text": "Werkzeug and Jinja2 are two of its libraries. ", "answer": 0 },
                { "answer_text": "Flask is a web microframework for Python based on “Werkzeug, Jinja2 and good intentions” BSD license.", "answer": 1 },
                { "answer_text": "A session basically allows does not allow you to remember information from one request ", "answer": 0 }
            ]
        },
        "q8": {
            "question_text": ["- What is the usage of help() and dir() function in Python?"],
            "options": [
                { "answer_text": "A. The help() function is used to display the documentation string & the dir() function is used to display the defined symbols. ", "answer": 1 },
                { "answer_text": "B. A is True", "answer": 0 },
                { "answer_text": "C. A is False", "answer": 0 },
                { "answer_text": "D. None of the above", "answer": 0 }
            ]
        },
        "q9": {
            "question_text": ["- Whenever Python exits, why isn’t all the memory de-allocated?"],
            "options": [
                { "answer_text": "A. The objects that are referenced from the global namespaces are always de-allocated.", "answer": 0 },
                { "answer_text": "B. It is impossible to de-allocate those portions of memory that are reserved by the C library.", "answer": 1 },
                { "answer_text": "C. Python would will allocate/destroy every other object." , "answer": 1 },
                { "answer_text": "D. None of the above", "answer": 0 }
            ]
        },
        "q10": {
            "question_text": ["- What is dictionary in Python?"],
            "options": [
                { "answer_text": "A. It defines one-to-one relationship between keys and values.", "answer": 1 },
                { "answer_text": "B. It defines one-to-many relationship between keys and values.", "answer": 0 },
                { "answer_text": "C. It defines many-to-many relationship between keys and values.", "answer": 0 },
                { "answer_text": "D. It defines many-to-one relationship between keys and values.", "answer": 0 }
            ]
        },
        "q11": {
            "question_text": ["- What is monkey patching in Python?"],
            "options": [
                { "answer_text": "A. The term monkey patch only refers to dynamic modifications of a class or module at run-time.", "answer": 1 },
                { "answer_text": "B. The term monkey patch refers to dynamic modifications of a class or module at compile-time.", "answer": 0 },
                { "answer_text": "C. The term monkey patch refers to dynamic modifications of a class or module at run-time.", "answer": 0 },
                { "answer_text": "D. None of the above", "answer": 0 }
            ]
        },
        "q12": {
            "question_text": ["- What does this mean: *args, **kwargs? And why would we use it?"],
            "options": [
                { "answer_text": "A. None of these", "answer": 0 },
                { "answer_text": "B. It cannot be used to pass the values of a dictionary as keyword arguments.", "answer": 0 },
                { "answer_text": "C. The identifiers args and kwargs are a convention,", "answer": 1 },
                { "answer_text": "D. We use *args when we are sure how many arguments are going to be passed in a function", "answer": 0 }
            ]
        },
        "q13": {
            "question_text": ["- Write a one-liner that will count the number of capital letters in a file. Your code should work even if the file is too big to fit in memory."],
            "options": [
                { "answer_text": "A. count sum(1 for line in fh for character in line if character.isupper())", "answer": 1 },
                { "answer_text": "B. count mul(1 for line in fh for character in line if character.isupper())", "answer": 0 },
                { "answer_text": "C. count sum(1 for line in fh for character in line if character.upper())", "answer": 0 },
                { "answer_text": "D. count add(1 for line in fh for character in line if character.upper())", "answer": 0 }
            ]
        },
        "q14": {
            "question_text": ["- What are negative indexes and why are they used?"],
            "options": [
                { "answer_text": "A. Because the sequences in Python are not indexed ", "answer": 0 },
                { "answer_text": "B. The negative index is not allowed to show the index to represent the string in incorrect order.", "answer": 0 },
                { "answer_text": "C. None of these", "answer": 0 },
                { "answer_text": "D. The negative index is used to remove any new-line spaces from the string and allow the string to except the last character", "answer": 1 }
            ]
        },

        "ANSWERS PENDING FROM HERE":{},
        
        "q15": {
            "question_text":["- How can you randomize the items of a list in place in Python?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q16": {
            "question_text":["- What is the process of compilation and linking in python?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q17": {
            "question_text":["- Write a sorting algorithm for a numerical dataset in Python."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q18": {
            "question_text":["- Looking at the below code, write down the final values of A0, A1, …An."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q19": {
            "question_text":["- Explain split(), sub(), subn() methods of “re” module in Python."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q20": {
            "question_text":["- How can you generate random numbers in Python?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q21": {
            "question_text":["- What is the difference between range & xrange?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q22": {
            "question_text":["- What is pickling and unpickling?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q23": {
            "question_text":["- Mention the differences between Django, Pyramid and Flask."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q24": {
            "question_text":["- Discuss the Django architecture."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q25": {
            "question_text":["- Explain how you can set up the Database in Django."],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q26": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q27": {
            "question_text":["-Which of the following is the possible way to load an array from a text data file in Python?"],
            "options":[
                { "answer_text": "A. numpy.loadtxt ();", "answer":0},
                { "answer_text": "B. scipy.loadtxt ();", "answer":0},
                { "answer_text": "C. matplot.loadtxt ();", "answer":0},
                { "answer_text": "D. None the above", "answer":0}
            ]
        },
        "q28": {
            "question_text":["- State out of the given which of the provide functions could be used in order to read data from the file using file descriptor?"],
            "options":[
                { "answer_text": "A. os.read() ", "answer":0},
                { "answer_text": "B. os.reader()", "answer":0},
                { "answer_text": "C. os.quick_read()", "answer":0},
                { "answer_text": "D. os.scould()", "answer":0}
            ]
        },
        "q29": {
            "question_text":["- Peruse  the given options and state which of the following function of diotionary get all  the values  from the dictionary?"],
            "options":[
                { "answer_text": "A. value() ", "answer":0},
                { "answer_text": "B. getvalues()", "answer":0},
                { "answer_text": "C. values()", "answer":0},
                { "answer_text": "D. None of these", "answer":0}
            ]
        },
        "q30": {
            "question_text":["- Which if the following is the python library  which is built on the top of matplotlib and pandas for the ease of data plotting?"],
            "options":[
                { "answer_text": "A. seapy", "answer":0},
                { "answer_text": "B. seaborn", "answer":0},
                { "answer_text": "C. arguments", "answer":0},
                { "answer_text": "D. seamat", "answer":0}
            ]
        },
        "q31": {
            "question_text":["- Go through the given options and state which of the following function checks in a string that all characters are digits?"],
            "options":[
                { "answer_text": "A. capitalize()", "answer":0},
                { "answer_text": "B. shuffle(lst)", "answer":0},
                { "answer_text": "C. isalnum()", "answer":0},
                { "answer_text": "D. isdigit()", "answer":0}
            ]
        },
        "q32": {
            "question_text":["- Is used when a user only wants to render a single router from the several routes which are defined.It will render the specified route in the first match only."],
            "options":[
                { "answer_text": "A. <div>", "answer":0},
                { "answer_text": "B. <render>", "answer":0},
                { "answer_text": "C. <switch>", "answer":0},
                { "answer_text": "D. None", "answer":0}
            ]
        },
        "q33": {
            "question_text":["- Whenver a class that has inherited an interface explicitly implements the methods of that class is know as"],
            "options":[
                { "answer_text": "A. implicit  implementation", "answer":0},
                { "answer_text": "B. explicit implementation", "answer":0},
                { "answer_text": "C. abstract implementation", "answer":0},
                { "answer_text": "D. None", "answer":0}
            ]
        },
        "q34": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q35": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q36": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q37": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q38": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q39": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q40": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q41": {
            "question_text":["- Give an example how you can write a VIEW in Django?"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q42": {
            "question_text":[""],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        }
    },

    "Advanced": {
        "q1": {
            "question_text":["Consider the given statements and state that which of the following is correct in relation in python???"],
            "options":[
                { "answer_text": "A. Python is designed to be highly readable", "answer":0},
                { "answer_text": "B. This is a high level object oriented scripting language", "answer":0},
                { "answer_text": "C. It makes the use of english keywords commonly", "answer":0},
                { "answer_text": "D. All of these", "answer":0}
            ]
        },
        "q2": {
            "question_text":["which of these is the definition for packages in python?"],
            "options":[
                { "answer_text": "A. a folder of python modules", "answer":0},
                { "answer_text": "B. a set of programs making use of python modules", "answer":0},
                { "answer_text": "C. a set of main modules", "answer":0},
                { "answer_text": "D. a number of files containing python definitions and statements", "answer":0}
            ]
        },
        "q3": {
            "question_text":["what feature we use for converting an arbitrary python object to a string so that it can be used as a dictionary"],
            "options":[
                { "answer_text": "A. finding", "answer":0},
                { "answer_text": "B. pickling", "answer":0},
                { "answer_text": "C. allocating", "answer":0},
                { "answer_text": "D. memory mnagement", "answer":0}
            ]
        },
        "q4": {
            "question_text":["consider the given options under development using python and specify that exactly which oif the provided option is correct about tuples in python?"],
            "options":[
                { "answer_text": "A. a tuple another sequence data type that is similar to the list", "answer":0},
                { "answer_text": "B. a tuple consists of a number of values separated by commas. ", "answer":0},
                { "answer_text": "C. Unlike lists ,however ,tuples are enclosed within paranthesis.", "answer":0},
                { "answer_text": "D. all", "answer":0}
            ]
        },
        "q5": {
            "question_text":["peruse the given option in context to python and specify that which of the givenfunctions could be used to read the data from the file using file descriptor"],
            "options":[
                { "answer_text": "A. ", "answer":0},
                { "answer_text": "B. ", "answer":0},
                { "answer_text": "C. ", "answer":0},
                { "answer_text": "D. ", "answer":0}
            ]
        },
        "q6": {
            "question_text":["what is the use of functools.partial() function in python?"],
            "options":[
                { "answer_text": "A. partial merger of data", "answer":0},
                { "answer_text": "B. to make higher order function", "answer":0},
                { "answer_text": "C. for dividing data partially", "answer":0},
                { "answer_text": "D. for comparison between data", "answer":0}
            ]
        },
        "q7": {
            "question_text":["which of the following dont have gil?"],
            "options":[
                { "answer_text": "A. Jython", "answer":0},
                { "answer_text": "B. IronPython", "answer":0},
                { "answer_text": "C. both", "answer":0},
                { "answer_text": "D. none", "answer":0}
            ]
        },
        "q8": {
            "question_text":["Suppose you have list named mylkist having number.you want to crearte a new list mynewlist,whose elements are double",
                "of the elemnets in mylist.(If elements of mylist code are 10,20,30 then the elements of mynewlist will 20,40,60 ).choose",
                "the correct code"],
            "options":[
                { "answer_text": "A. mynewlist=[x*2 for x in mylist]", "answer":0},
                { "answer_text": "B. mynewlist=2*mylist", "answer":0},
                { "answer_text": "C. mynewlist=[x*2*mylist]", "answer":0},
                { "answer_text": "D. mynewlist=set(mylist)", "answer":0}
            ]
        },
        "q9": {
            "question_text":["Quandl API for python wraps the .....RESR API to return pandas DataFrames with timeseries indexes"],
            "options":[
                { "answer_text": "A. Quandl", "answer":0},
                { "answer_text": "B. PyDataStream", "answer":0},
                { "answer_text": "C. PyData", "answer":0},
                { "answer_text": "D. None", "answer":0}
            ]
        },
        "q10": {
            "question_text":["output of following code",
                "code:",
                "i=5",
                "while True:",
                    "if i%0011 == 0:",
                        "break;",
                    "print(i)",
                    "i += 1"],
            "options":[
                { "answer_text": "A. 5 6 7 8", "answer":0},
                { "answer_text": "B. 5 6 7 8 9 10", "answer":0},
                { "answer_text": "C. 5 6", "answer":0},
                { "answer_text": "D. error", "answer":0}
            ]
        },
        "q11": {
            "question_text":["output of following code",
                "code:",
                "print('total of {0} and {1} is {2}'.format(3, 10, 13))"],
            "options":[
                { "answer_text": "A. error", "answer":0},
                { "answer_text": "B. total of 3 and 10 is 13", "answer":0},
                { "answer_text": "C. total of 0 and 1 is 2", "answer":0},
                { "answer_text": "D. None", "answer":0}
            ]
        },
        "q42": {
            "question_text":["output of following code",
                "code:",
                "mylist=[10,20,30,100,500,600]"],
            "options":[
                { "answer_text": "A. mynewlist=mylist", "answer":0},
                { "answer_text": "B. mynewlist=list(mylist)", "answer":0},
                { "answer_text": "C. mynewlist=fork(mylist)", "answer":0},
                { "answer_text": "D. mynewlist=set(mylist)", "answer":0}
            ]
        }
    },
    "q42": {
        "question_text":[""],
        "options":[
            { "answer_text": "A. ", "answer":0},
            { "answer_text": "B. ", "answer":0},
            { "answer_text": "C. ", "answer":0},
            { "answer_text": "D. ", "answer":0}
        ]
    },
    "q42": {
        "question_text":[""],
        "options":[
            { "answer_text": "A. ", "answer":0},
            { "answer_text": "B. ", "answer":0},
            { "answer_text": "C. ", "answer":0},
            { "answer_text": "D. ", "answer":0}
        ]
    },
    "q42": {
        "question_text":[""],
        "options":[
            { "answer_text": "A. ", "answer":0},
            { "answer_text": "B. ", "answer":0},
            { "answer_text": "C. ", "answer":0},
            { "answer_text": "D. ", "answer":0}
        ]
    },
    "q42": {
        "question_text":[""],
        "options":[
            { "answer_text": "A. ", "answer":0},
            { "answer_text": "B. ", "answer":0},
            { "answer_text": "C. ", "answer":0},
            { "answer_text": "D. ", "answer":0}
        ]
    }
}